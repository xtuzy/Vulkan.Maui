using System.Numerics;
using Veldrid;

namespace Vulkan.Maui.Demo
{
    public class HelloTriangle : GameBase, IDisposable
    {
        private DeviceBuffer _vertexBuffer;
        private Pipeline _pipeline;
        private CommandList _commandList;
        private Shader[] _shaders;
        private DeviceBuffer _indexBuffer;
        ushort[] triangleIndices;

        public unsafe override void CreateResources(ResourceFactory factory)
        {
            //vertices data of a triangle
            Vector3[] vertices = new Vector3[]
            {
                new Vector3( -0.5f, -0.5f, 0.0f),
                new Vector3(0.5f, -0.5f, 0.0f),
                new Vector3(0.0f, 0.5f, 0.0f),
            };

            // create Buffer for vertices data
            BufferDescription vbDescription = new BufferDescription(
                (uint)(vertices.Length * sizeof(Vector3)),
                BufferUsage.VertexBuffer);
            _vertexBuffer = factory.CreateBuffer(vbDescription);
            GraphicsDevice.UpdateBuffer(_vertexBuffer, 0, vertices);// update data to Buffer

            // Index data
            triangleIndices = new ushort[] { 0, 1, 2 };// CounterClockwise
            // create IndexBuffer
            BufferDescription ibDescription = new BufferDescription(
                (uint)(triangleIndices.Length * sizeof(ushort)),
                BufferUsage.IndexBuffer);
            _indexBuffer = factory.CreateBuffer(ibDescription);
            GraphicsDevice.UpdateBuffer(_indexBuffer, 0, triangleIndices);// update data to Buffer

            string vertexCode = @"
#version 460

layout(location = 0) in vec3 aPos;

void main()
{
    gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);
}";

            string fragmentCode = @"
#version 460

layout(location = 0) out vec4 FragColor;

void main()
{
    FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);
}";

            (byte[] vertexBytes, byte[] fragmentBytes) = GetShaderBytes(factory.BackendType);
            var vertexShaderDesc = new ShaderDescription(ShaderStages.Vertex, vertexBytes, "main");
            var fragmentShaderDesc = new ShaderDescription(ShaderStages.Fragment, fragmentBytes, "main");

            var vertexShader = factory.CreateShader(vertexShaderDesc);
            var fragmentShader = factory.CreateShader(fragmentShaderDesc);
            _shaders = new Shader[] { vertexShader, fragmentShader };
            
            // VertexLayout tell Veldrid we store what in Vertex Buffer, it need match with vertex.glsl
            VertexLayoutDescription vertexLayout = new VertexLayoutDescription(
               new VertexElementDescription("Position", VertexElementSemantic.TextureCoordinate, VertexElementFormat.Float3));

            // create GraphicsPipeline
            GraphicsPipelineDescription pipelineDescription = new GraphicsPipelineDescription();
            pipelineDescription.BlendState = BlendStateDescription.SingleOverrideBlend;
            pipelineDescription.DepthStencilState = DepthStencilStateDescription.Disabled;
            pipelineDescription.RasterizerState = new RasterizerStateDescription(
                cullMode: FaceCullMode.Back,
                fillMode: PolygonFillMode.Solid,//draw outline or fill
                frontFace: FrontFace.CounterClockwise,//order of drawing point, see Indices array.
                depthClipEnabled: true,
                scissorTestEnabled: false);
            pipelineDescription.PrimitiveTopology = PrimitiveTopology.TriangleStrip;//basis graphics is point,line,or triangle
            pipelineDescription.ResourceLayouts = System.Array.Empty<ResourceLayout>();
            pipelineDescription.ShaderSet = new ShaderSetDescription(
                vertexLayouts: new VertexLayoutDescription[] { vertexLayout },
                shaders: _shaders);
            pipelineDescription.Outputs = MainSwapchain.Framebuffer.OutputDescription;

            _pipeline = factory.CreateGraphicsPipeline(pipelineDescription);
            // create CommandList
            _commandList = factory.CreateCommandList();
        }

        public override void OnRender(float deltaSeconds)
        {
            // Begin() must be called before commands can be issued.
            _commandList.Begin();

            _commandList.SetFramebuffer(MainSwapchain.Framebuffer);
            _commandList.ClearColorTarget(0, RgbaFloat.Black);

            _commandList.SetVertexBuffer(0, _vertexBuffer);
            _commandList.SetIndexBuffer(_indexBuffer, IndexFormat.UInt16);
            _commandList.SetPipeline(_pipeline);
            _commandList.DrawIndexed(
                indexCount: (uint)triangleIndices.Length,
                instanceCount: 1,
                indexStart: 0,
                vertexOffset: 0,
                instanceStart: 0);

            // End() must be called before commands can be submitted for execution.
            _commandList.End();
            GraphicsDevice?.SubmitCommands(_commandList);
            // Once commands have been submitted, the rendered image can be presented to the application window.
            GraphicsDevice?.SwapBuffers(MainSwapchain);
            GraphicsDevice?.WaitForIdle();
        }

        public override void OnGraphicsDeviceDestroyed()
        {
            _indexBuffer?.Dispose();
            _vertexBuffer?.Dispose();
            _pipeline?.Dispose();
            _commandList?.Dispose();
            foreach (var shader in _shaders)
                shader?.Dispose();
        }

        (byte[], byte[]) GetShaderBytes(GraphicsBackend backend)
        {
            byte[] vertexBytes = backend == GraphicsBackend.Metal ? HelloTriangle_Vertex_MLSL : backend == GraphicsBackend.Direct3D11 ? HelloTriangle_Vertex_HLSL : HelloTriangle_Vertex_GLES;
            byte[] fragmentBytes = backend == GraphicsBackend.Metal ? HelloTriangle_Fragment_MLSL : backend == GraphicsBackend.Direct3D11 ? HelloTriangle_Fragment_HLSL : HelloTriangle_Fragment_GLES;
            return (vertexBytes, fragmentBytes);
        }

        /// <summary>
        /// convert glsl to spirv use <see href="https://shader-playground.timjones.io/#"/>
        /// </summary>
        static byte[] spirvVertexCode =
{
    0x03, 0x02, 0x23, 0x07, 0x00, 0x06, 0x01, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00,  // ..#......... ...
    0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00,  // ................
    0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30,  // ....GLSL.std.450
    0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ................
    0x0f, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e,  // ............main
    0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00,  // ................
    0x02, 0x00, 0x00, 0x00, 0xcc, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00,  // ................
    0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00,  // main............
    0x67, 0x6c, 0x5f, 0x50, 0x65, 0x72, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x00, 0x00, 0x00, 0x00,  // gl_PerVertex....
    0x06, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x50,  // ............gl_P
    0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x06, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00,  // osition.........
    0x01, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65,  // ....gl_PointSize
    0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  // ................
    0x67, 0x6c, 0x5f, 0x43, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x00,  // gl_ClipDistance.
    0x06, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x43,  // ............gl_C
    0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x00, 0x05, 0x00, 0x03, 0x00,  // ullDistance.....
    0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00,  // ................
    0x61, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00,  // aPos....H.......
    0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,  // ............H...
    0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ................
    0x48, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,  // H...............
    0x03, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ....H...........
    0x0b, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x0b, 0x00, 0x00, 0x00,  // ........G.......
    0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,  // ....G...........
    0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00,  // ............!...
    0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00,  // ................
    0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,  //  ...............
    0x04, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,  // ............ ...
    0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,  // ....+...........
    0x01, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,  // ................
    0x09, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,  // ................
    0x06, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,  // ............ ...
    0x0c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,  // ............;...
    0x0c, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00,  // ................
    0x0e, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00,  // .... .......+...
    0x0e, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00,  // ................
    0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,  // ............ ...
    0x11, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,  // ............;...
    0x11, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00,  // ............+...
    0x08, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,  // ............ ...
    0x14, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00,  // ............+...
    0x08, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00,  // ............+...
    0x06, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x20, 0x00, 0x04, 0x00,  // ...........? ...
    0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00,  // ............6...
    0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ................
    0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x14, 0x00, 0x00, 0x00,  // ........A.......
    0x15, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // ............=...
    0x06, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,  // ............A...
    0x14, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,  // ................
    0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00,  // =...............
    0x41, 0x00, 0x05, 0x00, 0x14, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00,  // A...............
    0x19, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00,  // ....=...........
    0x1a, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,  // ....P...........
    0x16, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,  // ................
    0x41, 0x00, 0x05, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,  // A...............
    0x0f, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,  // ....>...........
    0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00 // ....8...
};
        static byte[] spirvFragmentCode =
{
    0x03, 0x02, 0x23, 0x07, 0x00, 0x06, 0x01, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x0e, 0x00, 0x00, 0x00,  // ..#.............
    0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00,  // ................
    0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30,  // ....GLSL.std.450
    0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ................
    0x0f, 0x00, 0x06, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e,  // ............main
    0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00,  // ................
    0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00, 0xcc, 0x01, 0x00, 0x00,  // ................
    0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00,  // ........main....
    0x05, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f,  // ........FragColo
    0x72, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,  // r...G...........
    0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00,  // ............!...
    0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00,  // ................
    0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,  //  ...............
    0x04, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // .... ...........
    0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,  // ....;...........
    0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,  // ....+...........
    0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,  // ...?+...........
    0x00, 0x00, 0x00, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,  // ...?+...........
    0xcd, 0xcc, 0x4c, 0x3e, 0x2c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,  // ..L>,...........
    0x0a, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,  // ................
    0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // 6...............
    0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00,  // ............>...
    0x09, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00 // ............8...
};

        public static byte[] HelloTriangle_Vertex_MLSL = { 35, 105, 110, 99, 108, 117, 100, 101, 32, 60, 109, 101, 116, 97, 108, 95, 115, 116, 100, 108, 105, 98, 62, 10, 35, 105, 110, 99, 108, 117, 100, 101, 32, 60, 115, 105, 109, 100, 47, 115, 105, 109, 100, 46, 104, 62, 10, 10, 117, 115, 105, 110, 103, 32, 110, 97, 109, 101, 115, 112, 97, 99, 101, 32, 109, 101, 116, 97, 108, 59, 10, 10, 115, 116, 114, 117, 99, 116, 32, 109, 97, 105, 110, 48, 95, 111, 117, 116, 10, 123, 10, 32, 32, 32, 32, 102, 108, 111, 97, 116, 52, 32, 103, 108, 95, 80, 111, 115, 105, 116, 105, 111, 110, 32, 91, 91, 112, 111, 115, 105, 116, 105, 111, 110, 93, 93, 59, 10, 125, 59, 10, 10, 115, 116, 114, 117, 99, 116, 32, 109, 97, 105, 110, 48, 95, 105, 110, 10, 123, 10, 32, 32, 32, 32, 102, 108, 111, 97, 116, 51, 32, 109, 95, 49, 56, 32, 91, 91, 97, 116, 116, 114, 105, 98, 117, 116, 101, 40, 48, 41, 93, 93, 59, 10, 125, 59, 10, 10, 118, 101, 114, 116, 101, 120, 32, 109, 97, 105, 110, 48, 95, 111, 117, 116, 32, 109, 97, 105, 110, 48, 40, 109, 97, 105, 110, 48, 95, 105, 110, 32, 105, 110, 32, 91, 91, 115, 116, 97, 103, 101, 95, 105, 110, 93, 93, 41, 10, 123, 10, 32, 32, 32, 32, 109, 97, 105, 110, 48, 95, 111, 117, 116, 32, 111, 117, 116, 32, 61, 32, 123, 125, 59, 10, 32, 32, 32, 32, 111, 117, 116, 46, 103, 108, 95, 80, 111, 115, 105, 116, 105, 111, 110, 32, 61, 32, 102, 108, 111, 97, 116, 52, 40, 105, 110, 46, 109, 95, 49, 56, 46, 120, 44, 32, 105, 110, 46, 109, 95, 49, 56, 46, 121, 44, 32, 105, 110, 46, 109, 95, 49, 56, 46, 122, 44, 32, 49, 46, 48, 41, 59, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 111, 117, 116, 59, 10, 125, 10, 10 };
        public static byte[] HelloTriangle_Fragment_MLSL = { 35, 105, 110, 99, 108, 117, 100, 101, 32, 60, 109, 101, 116, 97, 108, 95, 115, 116, 100, 108, 105, 98, 62, 10, 35, 105, 110, 99, 108, 117, 100, 101, 32, 60, 115, 105, 109, 100, 47, 115, 105, 109, 100, 46, 104, 62, 10, 10, 117, 115, 105, 110, 103, 32, 110, 97, 109, 101, 115, 112, 97, 99, 101, 32, 109, 101, 116, 97, 108, 59, 10, 10, 115, 116, 114, 117, 99, 116, 32, 109, 97, 105, 110, 48, 95, 111, 117, 116, 10, 123, 10, 32, 32, 32, 32, 102, 108, 111, 97, 116, 52, 32, 109, 95, 57, 32, 91, 91, 99, 111, 108, 111, 114, 40, 48, 41, 93, 93, 59, 10, 125, 59, 10, 10, 102, 114, 97, 103, 109, 101, 110, 116, 32, 109, 97, 105, 110, 48, 95, 111, 117, 116, 32, 109, 97, 105, 110, 48, 40, 41, 10, 123, 10, 32, 32, 32, 32, 109, 97, 105, 110, 48, 95, 111, 117, 116, 32, 111, 117, 116, 32, 61, 32, 123, 125, 59, 10, 32, 32, 32, 32, 111, 117, 116, 46, 109, 95, 57, 32, 61, 32, 102, 108, 111, 97, 116, 52, 40, 49, 46, 48, 44, 32, 48, 46, 53, 44, 32, 48, 46, 50, 48, 48, 48, 48, 48, 48, 48, 50, 57, 56, 48, 50, 51, 50, 50, 51, 56, 55, 54, 57, 53, 51, 49, 50, 53, 44, 32, 49, 46, 48, 41, 59, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 111, 117, 116, 59, 10, 125, 10, 10 };
        public static byte[] HelloTriangle_Vertex_HLSL = { 115, 116, 97, 116, 105, 99, 32, 102, 108, 111, 97, 116, 52, 32, 103, 108, 95, 80, 111, 115, 105, 116, 105, 111, 110, 59, 10, 115, 116, 97, 116, 105, 99, 32, 102, 108, 111, 97, 116, 51, 32, 95, 49, 56, 59, 10, 10, 115, 116, 114, 117, 99, 116, 32, 83, 80, 73, 82, 86, 95, 67, 114, 111, 115, 115, 95, 73, 110, 112, 117, 116, 10, 123, 10, 32, 32, 32, 32, 102, 108, 111, 97, 116, 51, 32, 95, 49, 56, 32, 58, 32, 84, 69, 88, 67, 79, 79, 82, 68, 48, 59, 10, 125, 59, 10, 10, 115, 116, 114, 117, 99, 116, 32, 83, 80, 73, 82, 86, 95, 67, 114, 111, 115, 115, 95, 79, 117, 116, 112, 117, 116, 10, 123, 10, 32, 32, 32, 32, 102, 108, 111, 97, 116, 52, 32, 103, 108, 95, 80, 111, 115, 105, 116, 105, 111, 110, 32, 58, 32, 83, 86, 95, 80, 111, 115, 105, 116, 105, 111, 110, 59, 10, 125, 59, 10, 10, 118, 111, 105, 100, 32, 118, 101, 114, 116, 95, 109, 97, 105, 110, 40, 41, 10, 123, 10, 32, 32, 32, 32, 103, 108, 95, 80, 111, 115, 105, 116, 105, 111, 110, 32, 61, 32, 102, 108, 111, 97, 116, 52, 40, 95, 49, 56, 46, 120, 44, 32, 95, 49, 56, 46, 121, 44, 32, 95, 49, 56, 46, 122, 44, 32, 49, 46, 48, 102, 41, 59, 10, 125, 10, 10, 83, 80, 73, 82, 86, 95, 67, 114, 111, 115, 115, 95, 79, 117, 116, 112, 117, 116, 32, 109, 97, 105, 110, 40, 83, 80, 73, 82, 86, 95, 67, 114, 111, 115, 115, 95, 73, 110, 112, 117, 116, 32, 115, 116, 97, 103, 101, 95, 105, 110, 112, 117, 116, 41, 10, 123, 10, 32, 32, 32, 32, 95, 49, 56, 32, 61, 32, 115, 116, 97, 103, 101, 95, 105, 110, 112, 117, 116, 46, 95, 49, 56, 59, 10, 32, 32, 32, 32, 118, 101, 114, 116, 95, 109, 97, 105, 110, 40, 41, 59, 10, 32, 32, 32, 32, 83, 80, 73, 82, 86, 95, 67, 114, 111, 115, 115, 95, 79, 117, 116, 112, 117, 116, 32, 115, 116, 97, 103, 101, 95, 111, 117, 116, 112, 117, 116, 59, 10, 32, 32, 32, 32, 115, 116, 97, 103, 101, 95, 111, 117, 116, 112, 117, 116, 46, 103, 108, 95, 80, 111, 115, 105, 116, 105, 111, 110, 32, 61, 32, 103, 108, 95, 80, 111, 115, 105, 116, 105, 111, 110, 59, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 115, 116, 97, 103, 101, 95, 111, 117, 116, 112, 117, 116, 59, 10, 125, 10 };
        public static byte[] HelloTriangle_Fragment_HLSL = { 115, 116, 97, 116, 105, 99, 32, 102, 108, 111, 97, 116, 52, 32, 95, 57, 59, 10, 10, 115, 116, 114, 117, 99, 116, 32, 83, 80, 73, 82, 86, 95, 67, 114, 111, 115, 115, 95, 79, 117, 116, 112, 117, 116, 10, 123, 10, 32, 32, 32, 32, 102, 108, 111, 97, 116, 52, 32, 95, 57, 32, 58, 32, 83, 86, 95, 84, 97, 114, 103, 101, 116, 48, 59, 10, 125, 59, 10, 10, 118, 111, 105, 100, 32, 102, 114, 97, 103, 95, 109, 97, 105, 110, 40, 41, 10, 123, 10, 32, 32, 32, 32, 95, 57, 32, 61, 32, 102, 108, 111, 97, 116, 52, 40, 49, 46, 48, 102, 44, 32, 48, 46, 53, 102, 44, 32, 48, 46, 50, 48, 48, 48, 48, 48, 48, 48, 50, 57, 56, 48, 50, 51, 50, 50, 51, 56, 55, 54, 57, 53, 51, 49, 50, 53, 102, 44, 32, 49, 46, 48, 102, 41, 59, 10, 125, 10, 10, 83, 80, 73, 82, 86, 95, 67, 114, 111, 115, 115, 95, 79, 117, 116, 112, 117, 116, 32, 109, 97, 105, 110, 40, 41, 10, 123, 10, 32, 32, 32, 32, 102, 114, 97, 103, 95, 109, 97, 105, 110, 40, 41, 59, 10, 32, 32, 32, 32, 83, 80, 73, 82, 86, 95, 67, 114, 111, 115, 115, 95, 79, 117, 116, 112, 117, 116, 32, 115, 116, 97, 103, 101, 95, 111, 117, 116, 112, 117, 116, 59, 10, 32, 32, 32, 32, 115, 116, 97, 103, 101, 95, 111, 117, 116, 112, 117, 116, 46, 95, 57, 32, 61, 32, 95, 57, 59, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 115, 116, 97, 103, 101, 95, 111, 117, 116, 112, 117, 116, 59, 10, 125, 10 };
        public static byte[] HelloTriangle_Vertex_GLES = { 35, 118, 101, 114, 115, 105, 111, 110, 32, 51, 48, 48, 32, 101, 115, 10, 10, 108, 97, 121, 111, 117, 116, 40, 108, 111, 99, 97, 116, 105, 111, 110, 32, 61, 32, 48, 41, 32, 105, 110, 32, 118, 101, 99, 51, 32, 97, 80, 111, 115, 59, 10, 10, 118, 111, 105, 100, 32, 109, 97, 105, 110, 40, 41, 10, 123, 10, 32, 32, 32, 32, 103, 108, 95, 80, 111, 115, 105, 116, 105, 111, 110, 32, 61, 32, 118, 101, 99, 52, 40, 97, 80, 111, 115, 46, 120, 44, 32, 97, 80, 111, 115, 46, 121, 44, 32, 97, 80, 111, 115, 46, 122, 44, 32, 49, 46, 48, 41, 59, 10, 125, 10, 10 };
        public static byte[] HelloTriangle_Fragment_GLES = { 35, 118, 101, 114, 115, 105, 111, 110, 32, 51, 48, 48, 32, 101, 115, 10, 112, 114, 101, 99, 105, 115, 105, 111, 110, 32, 109, 101, 100, 105, 117, 109, 112, 32, 102, 108, 111, 97, 116, 59, 10, 112, 114, 101, 99, 105, 115, 105, 111, 110, 32, 104, 105, 103, 104, 112, 32, 105, 110, 116, 59, 10, 10, 108, 97, 121, 111, 117, 116, 40, 108, 111, 99, 97, 116, 105, 111, 110, 32, 61, 32, 48, 41, 32, 111, 117, 116, 32, 104, 105, 103, 104, 112, 32, 118, 101, 99, 52, 32, 70, 114, 97, 103, 67, 111, 108, 111, 114, 59, 10, 10, 118, 111, 105, 100, 32, 109, 97, 105, 110, 40, 41, 10, 123, 10, 32, 32, 32, 32, 70, 114, 97, 103, 67, 111, 108, 111, 114, 32, 61, 32, 118, 101, 99, 52, 40, 49, 46, 48, 44, 32, 48, 46, 53, 44, 32, 48, 46, 50, 48, 48, 48, 48, 48, 48, 48, 50, 57, 56, 48, 50, 51, 50, 50, 51, 56, 55, 54, 57, 53, 51, 49, 50, 53, 44, 32, 49, 46, 48, 41, 59, 10, 125, 10, 10 };
    }
}
